name: CI/CD for NestJS to DockerHub & Render

on:
  push:
    branches: [main]

jobs:
  selective-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Detect changed folders
        id: changes
        run: |
          if [ $(git rev-list --count ${{ github.sha }}) -eq 1 ]; then
            echo "CHANGED=eshop.auth eshop.order eshop.order.server eshop.server eshop.user.server" >> "$GITHUB_OUTPUT"
          else
            echo "CHANGED=$(git diff --name-only ${{ github.sha }}^1 ${{ github.sha }} | cut -d/ -f1 | sort -u | tr '\n' ' ')" >> "$GITHUB_OUTPUT"
          fi

      - name: Build & push eshop.auth if changed
        if: contains(steps.changes.outputs.CHANGED, 'eshop.auth')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eshop.auth:latest ./eshop.auth
          docker push ${{ secrets.DOCKER_USERNAME }}/eshop.auth:latest

      - name: Redeploy eshop.auth on Render
        if: contains(steps.changes.outputs.CHANGED, 'eshop.auth')
        run: |
          curl -X POST ${{ secrets.AUTH_SERVER_RENDER_DEPLOY_HOOK_URL }}

      - name: Build & push eshop.order if changed
        if: contains(steps.changes.outputs.CHANGED, 'eshop.order')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eshop.order:latest ./eshop.order
          docker push ${{ secrets.DOCKER_USERNAME }}/eshop.order:latest

      - name: Redeploy eshop.order on Render
        if: contains(steps.changes.outputs.CHANGED, 'eshop.order')
        run: |
          curl -X POST ${{ secrets.ORDER_RENDER_DEPLOY_HOOK_URL }}

      - name: Build & push eshop.order.server if changed
        if: contains(steps.changes.outputs.CHANGED, 'eshop.order.server')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eshop.order.server:latest ./eshop.order.server
          docker push ${{ secrets.DOCKER_USERNAME }}/eshop.order.server:latest

      - name: Redeploy eshop.order.server on Render
        if: contains(steps.changes.outputs.CHANGED, 'eshop.order.server')
        run: |
          curl -X POST ${{ secrets.ORDER_SERVER_RENDER_DEPLOY_HOOK_URL }}

      - name: Build & push eshop.server if changed
        if: contains(steps.changes.outputs.CHANGED, 'eshop.server')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eshop.server:latest ./eshop.server
          docker push ${{ secrets.DOCKER_USERNAME }}/eshop.server:latest

      - name: Redeploy eshop.server on Render
        if: contains(steps.changes.outputs.CHANGED, 'eshop.server')
        run: |
          curl -X POST ${{ secrets.SERVER_RENDER_DEPLOY_HOOK_URL }}

      - name: Build & push eshop.user.server if changed
        if: contains(steps.changes.outputs.CHANGED, 'eshop.user.server')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eshop.user.server:latest ./eshop.user.server
          docker push ${{ secrets.DOCKER_USERNAME }}/eshop.user.server:latest

      - name: Redeploy eshop.user.server on Render
        if: contains(steps.changes.outputs.CHANGED, 'eshop.user.server')
        run: |
          curl -X POST ${{ secrets.USER_SERVER_RENDER_DEPLOY_HOOK_URL }}
